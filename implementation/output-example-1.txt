>>>>> ESTIMATED >>>>>
TK?M(Component1@SysML):Maybe a final state may be missing
TK?O(S11@Component1@SysML):State S11 might not happen in Component1
TK~O(S12@Component1@SysML):I am not sure State S12 is valid in Component1
GT!O(S11@Component1@CPP):Class S11 *must* be present
GT??O(S14@Component1@CPP):Class S14 probably not needed
GT~O(e22@Component2@CPP):I am not very sure about event e22
GT?O(S23@Component2@CPP):Class S23 not needed in COmponent2?


>>>>> Propagated uncertainties >>>>>


>>>>> Derived uncertainties after propagation and 'and-ing' >>>>>

GT!O(S11@Component1@CPP):Class S11 *must* be present
GT??O(S14@Component1@CPP):Class S14 probably not needed
GT~O(e22@Component2@CPP):I am not very sure about event e22
GT?O(S23@Component2@CPP):Class S23 not needed in COmponent2?
TK?O(S11@Component1@SysML):State S11 might not happen in Component1
TK~O(S12@Component1@SysML):I am not sure State S12 is valid in Component1

>>>>> Uncertainties after 'merging' double ones from different actors >>>>>

GT!O(S11@Component1@CPP):Class S11 *must* be present
GT??O(S14@Component1@CPP):Class S14 probably not needed
GT~O(e22@Component2@CPP):I am not very sure about event e22
GT?O(S23@Component2@CPP):Class S23 not needed in COmponent2?
TK?O(S11@Component1@SysML):State S11 might not happen in Component1
TK~O(S12@Component1@SysML):I am not sure State S12 is valid in Component1

>>>>> Detected inconsistencies >>>>>
these do not hold:
[!]UNC. ?S11@Component1@SysML <-> !S11@Component1@CPP
[]RULE S13@Component1@SysML <-> S13@Component1@CPP
[~]UNC. S12@Component1@CPP <-> ~S12@Component1@SysML
[~]UNC. e22@Component2@SysML <-> ~e22@Component2@CPP
[?]UNC. S23@Component2@SysML <-> ?S23@Component2@CPP
[??]RULE ??S14@Component1@CPP <-> S14@Component1@SysML
Done
